/* ============================================
 * ============ TYPORA lATEX THEME ============
 * ============================================
 * THIS PROJECT IS BASED ON THE WORKS OF YFZHAO20 AND DU33169, 
   WHOSE REPOSITORIES ARE ADRESSED ON 
   <https://github.com/yfzhao20/Typora-markdown>
   AND <https://github.com/du33169/typora-theme-essay_cn>,
   MANY THANKS TO THEM.
 * "TYPORA LATEX THEME" (MARKDOWN LATEX THEME)
   IS A THEME FOR TYPORA (OR CSS FOR OTHER MARKDOWN EDITORS),
   DESIGNED FOR CHINESE UNIVERSITY STUDENTS 
   USED IN LATEX-STYLED ESSAYS OR EXPERIMENTAL REPORTS.
 * COPYRIGHT (C) 2021 KELDOS; 
   REPOSITORY ADDRESS: <https://github.com/Keldos-Li/typora-latex-theme>;
   LISENCED UNDER GPL v3.0, SEE <https://github.com/Keldos-Li/typora-latex-theme/blob/main/LICENSE>
*/

/* LaTeX-dark on Windows */

@import "./latex/userCustom.css";

:root {
    --md-char-color: hsl(212, 100%, 85%);
    --link-hover: hsl(212, 100%, 85%);
    --focus-cont-bg: hsl(0, 0%, 10%);
    --focus-para-bg: hsl(0, 0%, 15%);
    --opt-borderb: 1px dashed hsl(212, 100%, 65%);
    --focus-shadow: 0px 8px 16px 0 rgba(0, 0, 0, 0.9);
    --opt-shadow: 0px 8px 16px 1px hsla(0, 0%, 0%, 0.3);

    --side-bar-bg-color: #282828; /*change background of sidebar*/
    --window-border: 0px solid #929292;
    --title-color: #DDDDDD;
    --text-color: #DCDCDC;
    --select-text-bg-color: #9AB1CF;
    --select-text-font-color: #161616;
    --bg-color: hsl(0, 0%, 15%);
    --mermaid-theme: night;
}

body {
    padding: 0 !important;
    margin: 0 !important;
    line-height: var(--base-line-height);
    /*counter-reset: tableHead 0 imgHead 0;*/
    color: #DDDDDD; /* 黑色模式修改 */
    background-color: #282828; /* 黑色模式修改 */
    /*background:url(mermaidAPI.initialize({'fontFamily': '宋体-简, serif;'});); 可恶，不行 */
  }

/* 正文区基本属性，参照wordTeX模板设置字体大小*/
#write {
    font-family: var(--base-Latin-font), var(--base-Chinese-font), serif;
    font-size: var(--base-font-size);
    max-width: 21cm;/* A4标准宽度 */
    background-color: #1E1E1E; /* 黑色模式修改 */
    /* column-count: 2;
    column-gap: 25px;
    column-width: 8cm; 
    display: inline-block; */ 
    /* 这里可以试分栏的，但确实不适合实现 */
}

strong {
    font-weight: var(--strong-weight);
}

@media screen {
    #write {
        padding: var(--set-margin);
        /*border: 1px solid #AAAAAA ;*/
        box-shadow: 0 0 24px 12px #101010; /* 页边来一个阴影！！好耶 */
  }
}

@media print {
    #write {
        padding: 0 !important;
    }
    #write a {
        color: inherit;
        text-decoration: none;
    }
    @page {
        /* size: A4;  强制A4大小 */
        margin: 1.8cm 2cm 1.2cm 2cm !important; /* 虽然暗色不支持导出，但还是放着 */
    }
}

#write p {
    text-align: left;
}

/*
#write figure:after{
  counter-increment: tableHead;
  content: "表" counter(tableHead) " ";
  text-align:center;
  width:100%;
  display:inline-block;
}*/
/* 图片，导出PDF时暂时无法显示 */
/*
#write .md-image:after{
  counter-increment: imgHead;
  content: "图" counter(imgHead) " ";
  text-align:center;
  width:100%;
  display:inline-block;
}
*/

/* basic样式采用一般的引言，具有左边框、左缩进 */
blockquote {
    font-style: normal;
    font-family: var(--quote-font), var(--base-Latin-font), var(--base-Chinese-font), -apple-system, serif;
    font-size: var(--quote-font-size);
    border-left: 3px solid grey;
    padding-left: 16px; /* 文字离左边框的距离 */
    padding-right: 20pt;
    margin-left: 20px; /* 左边框离页面边的距离 */
    color: #BFBFBF; /* 文字颜色 */
}

/*border-width: 0.5pt 0;
  border-style:solid; 这一行本来使用了上下边框*/

/* 标题属性 */
#write h1,
#write h2,
#write h3,
#write h4,
#write h5,
#write h6 {
    font-weight: normal;
    font-family: var(--heading-Latin-font), var(--heading-Chinese-font), sans-serif;
    page-break-after: avoid !important;
}

#write h1 {
    font-family: var(--heading-Latin-font), var(--title-Chinese-font), sans-serif;
    font-weight: bold;
    text-align: center;
    column-span: all;
    font-size: var(--title-font-size);
}
#write h2 {
    font-family: var(--heading-Latin-font), var(--h2-Chinese-font), sans-serif;
    font-size: var(--h2-font-size);
}
#write h3 {
    font-family: var(--heading-Latin-font), var(--h3-Chinese-font), sans-serif;
    font-size: var(--h3-font-size);
    line-height: var(--h3-font-size);
}
#write h4 {
    font-family: var(--heading-Latin-font), var(--h4-Chinese-font), sans-serif;
    font-size: var(--h4-font-size);
    line-height: var(--h4-font-size);
}
#write h5 {
    font-family: var(--heading-Latin-font), var(--h5-Chinese-font), sans-serif;
    font-size: var(--h5-font-size);
    line-height: var(--h5-font-size);
}
#write h6 {
    font-family: var(--heading-Latin-font), var(--h6-Chinese-font), sans-serif;
    font-size: var(--h6-font-size);
    line-height: var(--h5-font-size); /* 没有写错，为了避免行距太小才这么写 */
}


/* 三线表 */
#write table {
    border-top: 1.2pt solid; /* 三线表第一条线宽度 */
    border-bottom: 1.2pt solid; /* 三线表第二条线宽度 */
    font-family: var(--table-font), var(--base-Latin-font), var(--base-Chinese-font), serif;
    /* font-size: var(--base-font-size); */
    text-align: center;
    page-break-inside: avoid;
    border-spacing: 6px;
    width: auto; /* 自动布局表格宽度，如果有时内容太紧建议直接加空格吧，我自己看不惯和页面等宽的大表格 */
    margin: 0 auto; /* 使表格默认居中；虽然这个代码不好，但好像没别的实现办法 */
}

#write table td {
    padding: 2px;
}

#write table tr {
    padding: 2px;
}

#write th {
    padding: 0px 6px;
}

/* 表格标题（首行）样式 */
#write thead {
    border-bottom: 0.5pt solid; /* 三线表表头的线 */
    font-family: var(--table-title-font), var(--heading-Latin-font), var(--heading-Chinese-font), serif !important;
    /* font-size: var(--base-font-size); */
    font-weight: var(--strong-weight);
}

hr {
  border-top: solid 0.7px #888888;
}

img {
    page-break-inside: avoid; /* 避免图片在导出时被断开 */
}

/* ============ 多级列表样式 ============ */
ul {
    list-style: disc; /* 无序列表第一级：实心圆点 */
}

ul ul {
    /*list-style: circle;*/
    list-style: '–　 '; /* 直接用空格代替一部分缩进的调整了我真懒 */
    /*left: -0.8em;*/
}

ul ul ul {
    list-style: "◦　  "; /* 无序列表第三极：小圈 */
    left: 0.6em;
}

ol {
    list-style: decimal;
    /* 有序列表第一级：数字 */
}

ol ol {
    counter-reset: liist;
    list-style: none;
}
ol ol li {
    counter-increment: liist;
    position: relative;
}
ol ol li::before {
    content: "("counter(liist, lower-alpha) ")　　"; /* 有序列表第二级：括号加小写字母 */
    position: absolute;
    margin-right: 2rem;
    left: -2.4em;
}

ol ol ol {
    counter-reset: liiist;
    list-style: none;
    margin: 0;
}
ol ol ol li {
    counter-increment: liiist;
    position: relative;
}
ol ol ol li::before {
    content: counter(liiist, lower-roman) ".　　　"; /* 有序列表第三级：小写罗马数字 这些后续还要改的可恶*/
    align-self: flex-end;
    position: absolute;
    left: -4.4em;
    /* -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;*/
    width: 6em; /* 为了让项目编号是重新用句点对齐而不是左对齐我调试了一整个晚上啊啊啊啊 CSS好难写 */
    text-align: right;
}

li {
    position: relative;
}
/* ============ 多级列表样式END ============ */


/* 行内代码 */
p code,
li code {
    color: #8BB1F9; /* 黑色模式修改 */
    background-color: #161616; /* 黑色模式修改 */
    font-family: var(--code-font), var(--ui-font), monospace;
    box-sizing: border-box;
    border-right: 0px;
    margin: 0 2px 0 2px;
    padding: 0 2px 0 2px;
    border-radius: 2px 2px 2px 2px; /* 圆角 */
    box-shadow: 0 0 1px 1px #141414; /* 黑色模式修改 */
}

/* 代码块样式*/
#write .CodeMirror-wrap {
    padding: 10px; /* 当代码太长跨页的时候好像也会有点问题，到时候再改 */
}

#write .CodeMirror-code pre {
    font-family: var(--code-font), var(--ui-font), monospace;
}

.cm-s-inner {
    border-top: 1.2pt solid;
    border-bottom: 1.2pt solid;
}

/* typora 编写模式 */
#typora-source {
    /* background: ;*/
    color: #DDDDDD;
    font-family: var(--sourceMode-font), var(--code-font), var(--ui-font), monospace;
    line-height: 2rem;
}

/* 下面是标题自动编号，初始化计数器。使用多级编号，编号后加空格模仿LaTeX */
/* 首先全局进行一次reset，这样即使不添加h1标题也可以使用较低级别的标题 */
#write {
    counter-reset: h2 0 h3 0 h4 0 h5 0 h6 0
}

#write h1 {
    counter-reset: h2
}
h2 {
    counter-reset: h3
}
h3 {
    counter-reset: h4
}
h4 {
    counter-reset: h5
}
h5 {
    counter-reset: h6
}

/* put counter result into headings */
#write h2:before {
    counter-increment: h2;
    content: counter(h2);
    margin-right: 2rem;
}
/** override the default style for focused headings */
#write h3:before,
h3.md-focus.md-heading:before {
    counter-increment: h3;
    content: counter(h2) "."counter(h3);
    margin-right: 2rem;
}
#write h4:before,
h4.md-focus.md-heading:before {
    counter-increment: h4;
    content: counter(h2) "."counter(h3) "."counter(h4);
    margin-right: 2rem;
}
#write h5:before,
h5.md-focus.md-heading:before {
    counter-increment: h5;
    content: counter(h2) "."counter(h3) "."counter(h4) "."counter(h5);
    margin-right: 2rem;
}
#write h6:before,
h6.md-focus.md-heading:before {
    counter-increment: h6;
    content: counter(h2) "."counter(h3) "."counter(h4) "."counter(h5) "."counter(h6);
    margin-right: 2rem;
}

/* 目录 */
.md-toc-content {
    margin-left: 2em;
    counter-reset: toc-h2 toc-h3 toc-h4; /* 修复缺失上级标题时无法递增 */
    page-break-after: always;
}
.md-toc-inner {
    margin-left: 0 !important;
    color: #DDDDDD !important; 
}
.md-toc-item {
    color: #DDDDDD !important; 
}

/* 目录标题内容属性 */
.md-toc-h2,
.md-toc-h3,
.md-toc-h4,
.md-toc-h5,
.md-toc-h6 {
    font-size: var(--toc-font-size);
    font-family: var(--toc-font), var(--base-Latin-font), var(--base-Chinese-font), serif;
}
.md-toc-h2 {
    font-weight: var(--strong-weight);
}

/* 目录标题前 */
.md-toc-content .md-toc-h1 {
    display: var(--toc-show-title);
    counter-reset: toc-h2;
}
.md-toc-content .md-toc-h2 {
    counter-reset: toc-h3;
}
.md-toc-content .md-toc-h3 {
    counter-reset: toc-h4;
}
.md-toc-content .md-toc-h4 {
    counter-reset: toc-h5;
}
.md-toc-content .md-toc-h5 {
    counter-reset: toc-h6;
}
.md-toc-content .md-toc-h2:before {
    counter-increment: toc-h2;
    content: counter(toc-h2);
    margin-right: 1rem;
    font-weight: var(--strong-weight);
}
.md-toc-content .md-toc-h3:before {
    counter-increment: toc-h3;
    content: counter(toc-h2) "."counter(toc-h3);
    margin-left: 1.5rem;
    margin-right: 0.5rem;
}
.md-toc-content .md-toc-h4:before {
    counter-increment: toc-h4;
    content: counter(toc-h2) "."counter(toc-h3) "."counter(toc-h4);
    margin-left: 3.5rem;
    margin-right: 0.5rem;
}
.md-toc-content .md-toc-h5:before {
    counter-increment: toc-h5;
    content: counter(toc-h2) "."counter(toc-h3) "."counter(toc-h4) "."counter(toc-h5);
    margin-left: 5.5rem;
    margin-right: 0.5rem;
}
.md-toc-content .md-toc-h6:before {
    counter-increment: toc-h6;
    content: counter(toc-h2) "."counter(toc-h3) "."counter(toc-h4) "."counter(toc-h5) "."counter(toc-h6);
    margin-left: 7.5rem;
    margin-right: 0.5rem;
}

/* 侧边大纲标题 */
.sidebar-content .outline-h1 {
    counter-reset: outline-h2;
}
.sidebar-content .outline-h2 {
    counter-reset: outline-h3;
}
.sidebar-content .outline-h3 {
    counter-reset: outline-h4;
}
.sidebar-content .outline-h4 {
    counter-reset: outline-h5;
}
.sidebar-content .outline-h5 {
    counter-reset: outline-h6;
}
.sidebar-content .outline-h2 .outline-label:before {
    counter-increment: outline-h2;
    content: counter(outline-h2) " ";
}
.sidebar-content .outline-h3 .outline-label:before {
    counter-increment: outline-h3;
    content: counter(outline-h2) "."counter(outline-h3) "  ";
}
.sidebar-content .outline-h4 .outline-label:before {
    counter-increment: outline-h4;
    content: counter(outline-h2) "."counter(outline-h3) "."counter(outline-h4) "  ";
}
.sidebar-content .outline-h5 .outline-label:before {
    counter-increment: outline-h5;
    content: counter(outline-h2) "."counter(outline-h3) "."counter(outline-h4) "."counter(outline-h5) "  ";
}

.sidebar-content {
    font-family: var(--ui-font); /* 侧边栏的字体修改 */
    list-style: none;
}

.sidebar-content {
    font-family: var(--ui-font); /* 侧边栏的字体修改 */
    list-style: none;
    background-color: #282828; /* 黑色模式修改 */
    color: #E9E9E9;
}

/* 元数据（如YAML front matter）的背景框 */
pre.md-meta-block {
    background: #161616;
    color: white !important;
    padding: 1.4em;
    font-family: var(--code-font), var(--ui-font), monospace;
}

/** override the default style for focused headings */
#write>h3.md-focus:before,
#write>h4.md-focus:before,
#write>h5.md-focus:before,
#write>h6.md-focus:before,
h3.md-focus:before,
h4.md-focus:before,
h5.md-focus:before,
h6.md-focus:before {
  color: inherit;
  border: inherit;
  border-radius: inherit;
  position: inherit;
  left:initial;
  float: none;
  top:initial;
  font-size: inherit;
  padding-left: inherit;
  padding-right: inherit;
  vertical-align: inherit;
  font-weight: inherit;
  line-height: inherit;
}


/* Modifications for dark-mode */
/*下面是针对代码块的修改，各部分含义由名称可以知道 */
/*.cm-s-inner .cm-variable {
    color: #fff;
}
.cm-s-inner .cm-operator {
    color: #69fc9a;
}
.cm-s-inner .cm-keyword {
    color: #fcad7e;
}
.cm-s-inner .cm-string {
    color: #01e5f9;
}
.cm-s-inner .cm-def {
    color: #93598f;
}
.cm-s-inner .cm-meta {
    color: #ad9494;
} 
.cm-s-inner .cm-builtin {
    color: #7f69b1;
}
.cm-s-inner .cm-number {
    color: #8c5853;
}*/

/* ====================我加的================== */
/*.cm-s-inner {
  background-color: #263238;
  color: rgba(233, 237, 237);
}*/
.cm-s-inner .CodeMirror-gutters {
  /* background: #263238;
  color: #537f7e;
  border: none; */
  border-right: 1px solid #263238;
}
/*.cm-s-inner .CodeMirror-guttermarker,
.cm-s-inner .CodeMirror-guttermarker-subtle,
.cm-s-inner .CodeMirror-linenumber {
  color: #537f7e;
}*/
.cm-s-inner .CodeMirror-cursor {
  border-left: 1px solid #f8f8f0;
}
.cm-s-inner div.CodeMirror-selected {
  background: rgba(255, 255, 255, 0.15);
}
.cm-s-inner.CodeMirror-focused div.CodeMirror-selected {
  background: rgba(255, 255, 255, 0.1);
}
.cm-s-inner .CodeMirror-line::selection,
.cm-s-inner .CodeMirror-line > span::selection,
.cm-s-inner .CodeMirror-line > span > span::selection {
  background: rgba(255, 255, 255, 0.1);
}
.cm-s-inner .CodeMirror-line::-moz-selection,
.cm-s-inner .CodeMirror-line > span::-moz-selection,
.cm-s-inner .CodeMirror-line > span > span::-moz-selection {
  background: rgba(255, 255, 255, 0.1);
}
.cm-s-inner .CodeMirror-activeline-background {
  background: rgba(0, 0, 0, 0);
}
.cm-s-inner .cm-keyword {
  color: #c792ea;
}
.cm-s-inner .cm-operator {
  color: #e9eded;
}
.cm-s-inner .cm-variable-2 {
  color: #80CBC4;
}
.cm-s-inner .cm-variable-3 {
  color: #82B1FF;
}
.cm-s-inner .cm-builtin {
  color: #DECB6B;
}
.cm-s-inner .cm-atom {
  color: #F77669;
}
.cm-s-inner .cm-number {
  color: #F77669;
}
.cm-s-inner .cm-def {
  color: #e9eded;
}
.cm-s-inner .cm-string {
  color: #C3E88D;
}
.cm-s-inner .cm-string-2 {
  color: #80CBC4;
}
.cm-s-inner .cm-comment {
  color: #546E7A;
}
.cm-s-inner .cm-variable {
  color: #82B1FF;
}
.cm-s-inner .cm-tag {
  color: #80CBC4;
}
.cm-s-inner .cm-meta {
  color: #80CBC4;
}
.cm-s-inner .cm-attribute {
  color: #FFCB6B;
}
.cm-s-inner .cm-property {
  color: #80CBAE;
}
.cm-s-inner .cm-qualifier {
  color: #DECB6B;
}
.cm-s-inner .cm-variable-3 {
  color: #DECB6B;
}
.cm-s-inner .cm-tag {
  color: #ff5370;
}
.cm-s-inner .cm-error {
  color: #ffffff;
  background-color: #EC5F67;
}
.cm-s-inner .CodeMirror-matchingbracket {
  text-decoration: underline;
  color: white !important;
}
.cm-s-inner .cm-link,
.cm-s-inner.cm-link {
  color: #4770C0;
}

.md-fences {
  /*background-color: #0E1116;*/
  /*color: #e9eded;*/
}
.md-fences .code-tooltip {
  background-color: #282828;
}
#write pre.md-fences {
  /*padding: 10rem;*/
}

/* 改变光标的颜色，在黑暗背景下能显示*/
.CodeMirror div.CodeMirror-cursor {
  border-left: 1px solid #ffffff;
  z-index: 3;
}

:root {
  --blur-text-color: hsla(0, 0%, 90%, 0.2);
  --active-file-bg-color: hsl(0, 0%, 5%);
  /* 文件列表 当前文件激活 背景色*/
  --active-file-text-color: hsl(212, 100%, 75%);
  --active-file-border-color: hsl(212, 100%, 75%);
  /* 树形结构下文件激活边框色 */
  /*--side-bar-bg-color: hsl(0, 0%, 10%);*/
  /*文件 大纲 侧边栏 背景色*/
  --item-hover-bg-color: hsl(0, 0%, 5%);
  /* 打开文文件夹、正文菜单、最近使用 hover 效果 */
  --item-hover-text-color: hsl(212, 100%, 75%);
  --primary-color: hsl(212, 100%, 75%);
  /* color of primary buttons */
  --primary-btn-border-color: hsl(212, 100%, 75%);
  --primary-btn-text-color: hsl(0, 0%, 15%);
  --select-text-bg-color: hsl(212, 100%, 85%);
  --select-text-font-color: hsl(0, 0%, 15%);
  --active-bg: hsl(0, 0%, 10%);
  --window-border: var(--bg-color);
  --control-text-color: var(--title-color);
  --control-text-hover-color: var(--text-color);
}
.active-tab-files .info-panel-tab,
.active-tab-outline .info-panel-tab {
  color: var(--active-file-text-color);
}
.file-list-item:hover {
  background: var(--item-hover-bg-color);
  color: var(--item-hover-text-color);
}
.file-node-content:hover {
  background: var(--active-file-bg-color);
  color: var(--active-file-text-color);
}


/* 整个界面编辑框外面的背景色 */
html>body>content {
  background-color: #161616;
}

/*#top-titlebar,
#top-titlebar * {
  background-color: #1A1A1A;
  color: white;
}
::-webkit-scrollbar-corner {
  display: none;
  background: transparent;
}
::-webkit-scrollbar-thumb {
  background: rgba(0, 0, 0, 0.05);
  background-clip: padding-box;
}
[draggable] {
  cursor: pointer;
}*/


/* 调整html编辑时的行为，能看清楚里面的文字 */
.md-rawblock-control:not(.md-rawblock-tooltip) {
  background-color: #1f1f1f;
}
.md-htmlblock .md-rawblock-tooltip {
  z-index: 0;
  color: rgb(45, 226, 43);
  background-color: #1f1f1f;
}
.CodeMirror{
  background-color: #1f1e1e;
}
.md-rawblock-on-edit>.md-rawblock-tooltip, .md-rawblock:hover>.md-rawblock-container, .md-rawblock:hover>.md-rawblock-tooltip {
  background: #1B1D21;
  display: block;
}
.md-rawblock:hover>.md-rawblock-tooltip{
  transition: none;
  animation: none;
}

/*  更改URL超链接颜色，最初的颜色不易查看 */
span > a {
  color: #8BB1F9;
}

.typora-sourceview-on #toggle-sourceview-btn{
    background-color: var(--item-hover-bg-color);
}